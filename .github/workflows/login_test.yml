name: Run Login Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: login_tests
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Debug folder structure before setup
        run: |
          echo "Current path:"
          pwd
          echo "Repository contents:"
          find . -type f -name "pom.xml" | xargs dirname
          echo "List login_tests directory:"
          ls -la
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-
      
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version
      
      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f 1)
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version
      
      - name: Set environment variables
        run: |
          echo "CHROME_BIN=/usr/bin/google-chrome" >> $GITHUB_ENV
          echo "CHROMEDRIVER_PATH=/usr/local/bin/chromedriver" >> $GITHUB_ENV
          echo "DISPLAY=:99" >> $GITHUB_ENV
      
      - name: Start Xvfb
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
      
      - name: Verify Maven configuration
        run: |
          echo "Maven version:"
          mvn --version
          echo "Checking pom.xml:"
          if [ -f "pom.xml" ]; then
            echo "pom.xml exists in current directory"
            cat pom.xml | head -20
          else
            echo "pom.xml NOT FOUND in current directory!"
            echo "Searching for pom.xml in repository:"
            find .. -name "pom.xml" -type f
          fi
      
      - name: Build and test with Maven with increased logging
        run: |
          mvn -e -X clean test \
            -Dadmin.username='${{ secrets.ADMIN_USERNAME }}' \
            -Dadmin.password='${{ secrets.ADMIN_PASSWORD }}' \
            -Dbase.url='${{ secrets.BASE_URL }}' \
            -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver \
            -Dwebdriver.chrome.verboseLogging=true
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          BASE_URL: ${{ secrets.BASE_URL }}
      
      - name: Archive logs if Maven fails
        if: failure()
        run: |
          echo "Maven build failed. Collecting logs..."
          mkdir -p /tmp/debug-logs
          find . -name "*.log" -o -name "*.xml" | grep -v target | xargs -I{} cp --parents {} /tmp/debug-logs/ || true
          find ~/.m2 -name "*_maven.log" | xargs -I{} cp {} /tmp/debug-logs/ || true
          ls -R /tmp/debug-logs
      
      - name: Upload debug logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: debug-logs
          path: /tmp/debug-logs
          if-no-files-found: warn
      
      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report
          path: |
            login_tests/target/surefire-reports
            target/surefire-reports
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
      
      - name: Upload screenshots and logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots-and-logs
          path: |
            **/screenshots
            **/error-screenshots
            **/logs
            **/*.log
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false